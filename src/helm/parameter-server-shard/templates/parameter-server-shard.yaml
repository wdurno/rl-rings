kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.name }} 
spec:
  selector:
    app: {{ .Values.name }} 
  ports:
    - port: 8080
      targetPort: 5000
---
apiVersion: apps/v1 
kind: Deployment
metadata: 
    name: {{ .Values.name }} 
    labels:
      name: {{ .Values.name }}
      app: {{ .Values.name }} 
      svc-grp: parameter-server-shards 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.name }} 
        app: {{ .Values.name }} 
    spec: 
      containers: 
        - name: listener  
          image: {{ .Values.docker_server }}/ai:{{ .Values.ai_image_tag }} 
          env:
            - name: MINIO_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: accesskey 
            - name: MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: secretkey
            - name: POSTGRES_SECRET 
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: postgres-secret 
          command: 
            - "python3"
            - "-u"
            - "src/python/parameter_server_shard/listener.py" 
          imagePullPolicy: Always
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
        - name: integrator 
          image: {{ .Values.docker_server }}/ai:{{ .Values.ai_image_tag }}
          env:
            - name: MINIO_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: accesskey
            - name: MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: secretkey
            - name: POSTGRES_SECRET
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: postgres-secret
          command:
            - "python3"
            - "-u"
            - "src/python/parameter_server_shard/integrator.py"
            - "--shard-index={{ .Values.shard_index }}"
          imagePullPolicy: Always
          resources:
            requests:
              memory: "2000Mi"
              cpu: "500m"
        - name: postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: postgres-secret
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          resources:
            requests:
              memory: "500Mi" 
              cpu: "500m"
      volumes:
        - name: pg-data 
          emptyDir: {} 
      imagePullSecrets:
        - name: acr-creds
      nodeSelector: 
        agentpool: ephemeral 
      tolerations:
        - key: kubernetes.azure.com/scalesetpriority
          operator: "Exists" 
